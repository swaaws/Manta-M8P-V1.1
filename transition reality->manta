# m1 s42c cls
# other creality

# This file contains pin mappings for the 2020 Creality CR-10Max (stock) To use
# this config, the firmware should be compiled for the AVR atmega2560, 16 Mhz, UART0, 115200 baudrate. 

# The flash wil be work but FIRMWARE_RESTART crash the usb controller in the cr10max. 
# To fix this flash the firmware bin directly over ISP with AVR Dragon. 


# Use at your own risk. it works for me but it may not work for you!.


#[stepper_y]
#step_pin: PF6
#dir_pin: !PF7
#enable_pin: !PF2
#microsteps: 16
#rotation_distance: 40
#endstop_pin: ^PJ1
#position_endstop: 0
#position_max: 450
#homing_speed: 50

[stepper_z]
step_pin: PL3
dir_pin: !PL1
enable_pin: !PK0
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop         #enable to use bltouch

position_max: 470
position_min: -5

[extruder]
step_pin: PA4
dir_pin: PA6
enable_pin: !PA2
microsteps: 16
rotation_distance: 23.3
# 33.683
nozzle_diameter: 0.800
filament_diameter: 1.750
heater_pin: PB4
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PK5
min_temp: 0
max_temp: 280
control: pid
pid_Kp: 22.57
pid_Ki: 1.72
pid_Kd: 73.96

[safe_z_home]
home_xy_position: 225, 225
speed: 100
z_hop: 2
z_hop_speed: 5

[bltouch]                             # enable for BLTouch - fast-mode
sensor_pin: ^PD2
control_pin: PB5
pin_up_reports_not_triggered: True
pin_up_touch_mode_reports_triggered: True
probe_with_touch_mode: True
stow_on_each_sample: false
x_offset: -38                         # modify as needed for bltouch location
y_offset: -2                          # modify as needed for bltouch location
z_offset: 2
speed: 10
samples: 2
sample_retract_dist: 5.0              # Can be set lower, example 2.5 depending on height of bltouch from bed
lift_speed: 40
samples_tolerance_retries: 3
samples: 2

[bed_mesh]
speed: 100
horizontal_move_z: 8
mesh_min: 50, 50
mesh_max: 400, 400
probe_count: 5, 5

[heater_bed]
heater_pin: PH5
sensor_type: ATC Semitec 104GT-2
sensor_pin: PK6
min_temp: 0
control: pid
pid_Kp: 426.68
pid_Ki: 78.92
pid_Kd: 576.71
max_temp: 120

[fan]
pin: PH6

[mcu]
serial: /dev/serial/by-id/usb-FTDI_FT232R_USB_UART_AK06VNFL-if00-port0
baud: 115200
restart_method: command



[printer]
kinematics: cartesian
max_velocity: 500
max_accel: 5000
max_z_velocity: 5
max_z_accel: 100


[display_status]


[pause_resume]


[screws_tilt_adjust]                      # enable for bed screws
horizontal_move_z: 5
screw1: 40,430
screw1_name: back left
screw2: 430,430
screw2_name: back right
screw3: 40,40
screw3_name: front left
screw4: 430,40
screw4_name: front right


[virtual_sdcard]
path: ~/printer_data/gcodes

# [mcu rpi]
# serial: /tmp/klipper_host_mcu


#[mpu9250]
#i2c_mcu: rpi
#i2c_bus: i2c.1


# [adxl345]
# cs_pin: rpi:gpio74
# spi_bus: spidev1.1



# [resonance_tester]
# accel_chip: adxl345
# probe_points:
#    225, 225, 20  # an example
#accel_chip: mpu9250
#probe_points:
#    225, 225, 20 


[input_shaper]
shaper_freq_x: 37
shaper_freq_y: 35.4
shaper_type_x: ei
shaper_type_y: mzv

#damping_ratio_x: 0.1
#damping_ratio_y: 0.


[gcode_macro SET_PERCENT]
gcode:
  M117 Now at { params.VALUE|float * 100 }%




[gcode_macro MOVE_UP]
gcode:
  SAVE_GCODE_STATE NAME=my_move_up_state
  G91
  G1 Z10 F300
  RESTORE_GCODE_STATE NAME=my_move_up_state






#[filament_motion_sensor runout]
##   The minimum length of filament pulled through the sensor to trigger
##   a state change on the switch_pin
##   Default is 7 mm.
#detection_length: 14.0
#extruder: extruder
#pause_on_runout: FALSE
#runout_gcode:
#  {action_respond_info("RUNOUT: Filament runout")}
#  PAUSE
#insert_gcode: {action_respond_info("RUNOUT: Filament inserted")}
##   The minimum amount of time in seconds to delay between events.
##   Events triggered during this time period will be silently
##   ignored. The default is 3 seconds.
##event_delay: 3.0
##   The amount of time to delay, in seconds, between the pause command
##   dispatch and execution of the runout_gcode. It may be useful to
##   increase this delay if OctoPrint exhibits strange pause behavior.
##   Default is 0.5 seconds.
##pause_delay: 0.5
###    XYE mcu E0DET
#switch_pin: ^!P1.26

[filament_switch_sensor filament_sensor]
##   When set to True, a PAUSE will execute immediately after a runout
##   is detected. Note that if pause_on_runout is False and the
##   runout_gcode is omitted then runout detection is disabled. Default
##   is True.
pause_on_runout: TRUE
runout_gcode: {action_respond_info("RUNOUT: Toolhead Filament runout")}
  PAUSE
  SAVE_GCODE_STATE NAME=runout_state
insert_gcode: {action_respond_info("RUNOUT: Toolhead Filament inserted")}
##   The minimum amount of time in seconds to delay between events.
##   Events triggered during this time period will be silently
##   ignored. The default is 3 seconds.
##event_delay: 3.0
##   The amount of time to delay, in seconds, between the pause command
##   dispatch and execution of the runout_gcode. It may be useful to
##   increase this delay if OctoPrint exhibits strange pause behavior.
##   Default is 0.5 seconds.
##pause_delay: 0.5
##    XYE mcu E1DET
switch_pin:PE4

#####################################################################
# 	Macro
#####################################################################
[gcode_macro SET_FILAMENT_SENSOR]
description: Sets the filament sensor on/off and save value to file
rename_existing: SET_FILAMENT_SENSOR_BASE
gcode:
  {% if printer.save_variables.variables.filament_sensor is not defined %}
    {% set filament_sensor = {params.SENSOR|string: params.ENABLE|int} %}
  {% else %}
    {% set filament_sensor = printer.save_variables.variables.filament_sensor %}
    {% set _dummy = filament_sensor.update({params.SENSOR|string: params.ENABLE|int}) %}
  {% endif %}
  SET_FILAMENT_SENSOR_BASE SENSOR={params.SENSOR} ENABLE={params.ENABLE}
  SAVE_VARIABLE VARIABLE=filament_sensor VALUE="{filament_sensor}"

[gcode_macro _RESTORE_FILAMENT_SENSOR]
description: Restore the filament sensor on/off state at klipper start
gcode:
  {% if printer.save_variables.variables.filament_sensor is defined %}
    {% for sensor in printer.save_variables.variables.filament_sensor %}
       SET_FILAMENT_SENSOR_BASE SENSOR={sensor} ENABLE={printer.save_variables.variables.filament_sensor[sensor]}
    {% endfor %}
  {% endif %}
  
[gcode_macro M600]
description: Filament change
gcode: PAUSE Y=0   ; everything needed is defined there

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.338750, 0.156250, 0.046250, 0.037500, 0.116250
#*# 	  0.247500, 0.073750, 0.001250, 0.023750, 0.155000
#*# 	  0.172500, 0.051250, -0.011250, 0.036250, 0.196250
#*# 	  0.130000, 0.003750, -0.003750, 0.075000, 0.250000
#*# 	  0.143750, 0.063750, 0.021250, 0.113750, 0.292500
#*# tension = 0.2
#*# min_x = 50.0
#*# algo = lagrange
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 50.0
#*# x_count = 5
#*# max_y = 400.0
#*# mesh_x_pps = 2
#*# max_x = 400.0
[mcu manta]
#serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_260019000F504B4633373520-if00
#serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_1C0017000F504B4633373520-if00
#serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
#serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_m8p-if00





#[include Manta-M8P-V1.1-main/manta_m8p.cfg]

#[include Manta-M8P-V1.1-main/basic.cfg]

#[printer]
#kinematics: cartesian
#max_velocity: 500
#max_accel: 5000
#max_z_velocity: 5
#max_z_accel: 100


########################################
# Axis configuration
########################################

# X M1 
#[include Manta-M8P-V1.1/drive/S42C-CLS/24V/M1]
#[include Manta-M8P-V1.1-main/drive/S42C-CLS/24V/M1]
#S42C Closed Loop Stepper Bundle on M1 with endstop switch ?
# 24V
# 
# Internal VCC -> VM 
# 1 Jumper: 2 row, red/black 


[stepper_x] #x
step_pin: manta:PE2
dir_pin: manta:PB4
enable_pin: !manta:PC11
microsteps: 16
full_steps_per_rotation: 200 
rotation_distance: 40
endstop_pin: ^manta:PC2
#position_min: -1
position_endstop: 0
position_max: 450
homing_speed: 50 


# Y M2 
#[include Manta-M8P-V1.1-main/drive/TMC5160-Pro/24V/M2_3,8立]
#TMC5160 Pro on M2 with Stepper Motor from S42C Closed Loop Stepper Bundle (stepper motor direct wiring to manta m8p, no use of cls)
# 12V
# 3,8立
# Internal VCC -> VM
# 4 Jumper
# 1 diag Jumper



[tmc5160 stepper_y]
spi_software_sclk_pin: manta:PA5
spi_software_mosi_pin: manta:PA7
spi_software_miso_pin: manta:PA6
cs_pin: manta:PF13
#diag1_pin: ^!manta:PF4
#spi_bus: spi1
interpolate: False 
run_current: 0.8               #TODO
sense_resistor: 0.075          #TODO
driver_SGT: 2                  #TODO
stealthchop_threshold: 9999    #TODO




[stepper_y]
step_pin: manta:PF12
dir_pin: !manta:PF11
enable_pin: !manta:PB3
microsteps: 16                 #TODO
rotation_distance: 40          #TODO
endstop_pin: manta:PF4 
#tmc5160_stepper_y:virtual_endstop
position_endstop: 0
position_max: 450
homing_speed: 50               #TODO



#[include Manta-M8P-V1.1-main/drive/TMC2209/sensorless_home.cfg]

# Z M3 + M4
#[include Manta-M8P-V1.1-main/drive/TMC5160-Pro/24V/M3_3,8立_bltouch]
#[include Manta-M8P-V1.1-main/drive/TMC5160-Pro/24V/M4_3,8立]

# BL Touch
#[include Manta-M8P-V1.1-main/probe/bltouch]

# M7 Extruder
#[include Manta-M8P-V1.1-main/extruder/Creality-CR10-S-Pro_Max/12V/M7-EX]


#[safe_z_home]
#home_xy_position: 225, 225
#speed: 100
#z_hop: 10
#z_hop_speed: 5
 
#[filament_switch_sensor material_0]
#pause_on_runout: True
#runout_gcode:
#    SAVE_GCODE_STATE NAME=PAUSE_state
#    BASE_PAUSE
#    G91
#    G1 E-5 F2100
#    G90
#    G1 X0 Y0 F6000
#switch_pin: PC5


#[bed_mesh]
#speed: 100
#horizontal_move_z: 8
#mesh_min: 50, 50
#mesh_max: 400, 400
#probe_count: 5, 5

[fan]
pin: PE6

#[heater_fan fan1]
#pin: PE0

#[heater_fan fan2]
#pin: PC12

#[heater_fan fan3]
#pin: PE5

#[heater_fan fan4]
#pin: PE4
#tachometer_pin: PC13

#[heater_fan fan5]
#pin: PB8
#tachometer_pin: PC14

#[heater_fan fan6]
#pin: PB9
#tachometer_pin: PC15




#[screws_tilt_adjust]                      # enable for bed screws
#horizontal_move_z: 5
#screw1: 40,430
#screw1_name: back left
#screw2: 430,430
#screw2_name: back right
#screw3: 40,40
#screw3_name: front left
#screw4: 430,40
#screw4_name: front right

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.490000, -0.017500, -0.422500, -0.658750, -0.773750
#*# 	  0.456250, -0.023750, -0.318750, -0.535000, -0.556250
#*# 	  0.465000, 0.017500, -0.282500, -0.410000, -0.398750
#*# 	  0.508750, 0.085000, -0.178750, -0.272500, -0.230000
#*# 	  0.537500, 0.185000, -0.053750, -0.111250, -0.028750
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 50.0
#*# max_x = 400.0
#*# min_y = 50.0
#*# max_y = 400.0

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.646250, 0.268750, -0.005000, -0.062500, 0.001250
#*# 	  0.608750, 0.227500, 0.010000, -0.005000, 0.085000
#*# 	  0.577500, 0.230000, 0.036250, 0.020000, 0.147500
#*# 	  0.603750, 0.283750, 0.101250, 0.095000, 0.253750
#*# 	  0.605000, 0.346250, 0.175000, 0.200000, 0.397500
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 50.0
#*# max_x = 400.0
#*# min_y = 50.0
#*# max_y = 400.0

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.591250, 0.150000, -0.142500, -0.212500, -0.157500
#*# 	  0.533750, 0.128750, -0.120000, -0.178750, -0.100000
#*# 	  0.540000, 0.128750, -0.128750, -0.188750, -0.042500
#*# 	  0.547500, 0.170000, -0.036250, -0.072500, 0.045000
#*# 	  0.593750, 0.243750, 0.053750, 0.015000, 0.148750
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 50.0
#*# max_x = 400.0
#*# min_y = 50.0
#*# max_y = 400.0
